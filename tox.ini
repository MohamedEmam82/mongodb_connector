# tox.ini: we use it for testing python package / application, in local environment against different versions of 
# python like, 3.7, 3.8, 3.9, ...etc.
# it ceates a .tox file as metadata at the end.


# gh-actions: 
#   - github-actions is a continuous integration and continuous delivery (CI/CD) platform can automate your workflow, 
#   - Allowing you to build, test, and deploy your code right from GitHub.
#   - Can create workflows that build and test every pull request to your repository, or deploy merged pull requests to production.
# the below instructions will create python envs in 3.8 & 3.9 versions, then test my code in those envs.
[gh-actions]
python = 
    3.8: python3.8
    3.9: python3.9


[testenv]
# install the required dependecies inside these envs
deps = -rrequirements_dev.txt

# then execute the following commands.
commands = 
    # stop the build if there are python syntax error or undefined name
    # will run flake8 tool inside src dir 
    # --select=E9,F63,F7,F82 --> are codes and protocols in PEP ( Python Enhancement Proposals)
    flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics

    # exit-zero treats all errors as warnings. the github editor is 127 chars wide
    # will run flake8 tool inside src dir 
    flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # type linting
    # will run mypy tool inside src dir 
    mypy src/

    # pytest unit
    # perform unit testing in tests/unit dir
    # -v or --verpose
    pytest -v tests/unit

    # pytest integration
    # perform integration testing in tests/integration dir
    pytest -v tests/integration
    